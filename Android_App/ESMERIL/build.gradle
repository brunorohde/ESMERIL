buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.3'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        google()
    }
}

apply plugin: 'com.android.application'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    //------------------------OFELIANOTE : from
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    //------------------------OFELIANOTE : to
    compileSdkVersion 22
    buildToolsVersion '27.0.3'
    defaultConfig {
        minSdkVersion 14  // 21 antes
        targetSdkVersion 22
        signingConfig signingConfigs.config
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.config
            debuggable false
        }
    }
    //------------------------OFELIANOTE : from
    lintOptions {
        abortOnError false
        disable "Instantiatable"
    }
    //------------------------OFELIANOTE : to
    // Configure source folders like Eclipse
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            jni.srcDirs = []
            java.srcDirs = ['srcJava']
            resources.srcDirs = ['srcJava']
            aidl.srcDirs = ['srcJava']
            renderscript.srcDirs = ['srcJava']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
    }
    productFlavors {
    }
}

dependencies {
    implementation project(':ofAndroidLib')
}

clean.dependsOn(":openFrameworksProject:clean")

//------------------------OFELIANOTE : from
tasks.whenTaskAdded { task ->
    if (task.name == 'assembleDebug') {
        task.dependsOn ':openFrameworksProject:compileDebugOF'
    }
}

tasks.whenTaskAdded { task ->
    if (task.name == 'assembleRelease') {
        task.dependsOn ':openFrameworksProject:compileReleaseOF'
    }
}
//------------------------OFELIANOTE : to


